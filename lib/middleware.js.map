{"version":3,"file":"middleware.js","sourceRoot":"","sources":["../src/middleware.ts"],"names":[],"mappings":";;;AAAA,8CAAuE;AACvE,qDAA+C;AAG/C,iDAA2C;AAE3C,SAAgB,UAAU,CAAC,OAAoB;IAC7C,IAAI,OAAO,CAAC,MAAM,KAAK,KAAK,EAAE;QAC5B,MAAM,GAAG,GAAG,SAAS,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACvC,IAAI,GAAG;YAAE,OAAO,GAAG,CAAC;KACrB;AACH,CAAC;AALD,gCAKC;AAED,MAAM,SAAS,GAAG,CAAC,GAAY,EAAE,EAAE;IACjC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IAE1B,IAAI,GAAG,CAAC,QAAQ,KAAK,wBAAwB,EAAE;QAC7C,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;QACjC,OAAO,IAAA,wBAAS,GAAE,CAAC;KACpB;IAED,MAAM,IAAI,GAAG,IAAI,sBAAU,CAAC;QAC1B,QAAQ,EAAE,0BAA0B;KACrC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAEb,IAAI,IAAI,EAAE;QACR,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;QAC7B,OAAO,IAAA,gBAAK,EAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;KAC/C;IAED,MAAM,YAAY,GAAG,IAAI,sBAAU,CAAC;QAClC,QAAQ,EAAE,oCAAoC;KAC/C,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAEb,IAAI,YAAY,EAAE;QAChB,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG,YAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;QAExD,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,QAAQ,CAAC,CAAC;QAC3C,OAAO,IAAI,wBAAY,CACrB,IAAI,CAAC,SAAS,CAAC;YACb,UAAU,EAAE,uCAAuC;YACnD,IAAI,EAAE,mBAAmB;YACzB,UAAU,EAAE,CAAC;YACb,YAAY,EAAE,EAAE;SACjB,CAAC,EACF;YACE,OAAO,EAAE;gBACP,cAAc,EAAE,sBAAsB;aACvC;SACF,CACF,CAAC;KACH;IAED,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;AAC1B,CAAC,CAAC","sourcesContent":["import { NextRequest, NextResponse, URLPattern } from \"next/server.js\";\nimport { actor } from \"./activitypub/actor.js\";\n// import { inbox } from \"./activitypub/inbox\";\nimport { NextURL } from \"next/dist/server/web/next-url.js\";\nimport { webfinger } from \"./webfinger.js\";\n\nexport function middleware(request: NextRequest) {\n  if (request.method === \"GET\") {\n    const res = matchPath(request.nextUrl);\n    if (res) return res;\n  }\n}\n\nconst matchPath = (url: NextURL) => {\n  console.log(url.pathname);\n\n  if (url.pathname === \"/.well-known/webfinger\") {\n    console.log(\"matched webfinger\");\n    return webfinger();\n  }\n\n  const user = new URLPattern({\n    pathname: \"/activitypub/users/:user\",\n  }).exec(url);\n\n  if (user) {\n    console.log(\"matched actor\");\n    return actor(user.pathname.groups.user ?? \"\");\n  }\n\n  const resourcePath = new URLPattern({\n    pathname: \"/activitypub/users/:user/:resource\",\n  }).exec(url);\n\n  if (resourcePath) {\n    const { user, resource } = resourcePath.pathname.groups;\n\n    console.log(\"matched resource:\", resource);\n    return new NextResponse(\n      JSON.stringify({\n        \"@context\": \"https://www.w3.org/ns/activitystreams\",\n        type: \"OrderedCollection\",\n        totalItems: 0,\n        orderedItems: [],\n      }),\n      {\n        headers: {\n          \"Content-Type\": \"application/jrd+json\",\n        },\n      }\n    );\n  }\n\n  console.log(\"no match\");\n};\n"]}